import { Card, CardContent } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { User, GameStats } from './GameSection'

interface UpgradesSectionProps {
  currentUser: User | null
  onUpgradeRobot: () => void
  onUpdateStats: (stats: GameStats) => void
}

export default function UpgradesSection({ currentUser, onUpgradeRobot, onUpdateStats }: UpgradesSectionProps) {
  if (!currentUser) {
    return null
  }

  const handleUpgradeEnergy = () => {
    if (!currentUser || currentUser.gameStats.coins < 100000) return
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞—Ç—É –≤ –∏—Å—Ç–æ—Ä–∏—é
    const spentHistory = JSON.parse(localStorage.getItem(`spentHistory_${currentUser.id}`) || '[]')
    spentHistory.push({
      id: Date.now(),
      type: 'upgrade',
      itemName: '–£–ª—É—á—à–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ (+20 —Ç–∞–ø–æ–≤)',
      amount: 100000,
      timestamp: Date.now(),
      date: new Date().toISOString()
    })
    localStorage.setItem(`spentHistory_${currentUser.id}`, JSON.stringify(spentHistory))
    
    const updatedStats = {
      ...currentUser.gameStats,
      coins: currentUser.gameStats.coins - 100000,
      maxTaps: currentUser.gameStats.maxTaps + 20,
      tapsLeft: currentUser.gameStats.tapsLeft + 20
    }
    
    onUpdateStats(updatedStats)
  }

  const handleBuyVIP = () => {
    if (!currentUser || currentUser.gameStats.coins < 50000) return
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞—Ç—É –≤ –∏—Å—Ç–æ—Ä–∏—é
    const spentHistory = JSON.parse(localStorage.getItem(`spentHistory_${currentUser.id}`) || '[]')
    spentHistory.push({
      id: Date.now(),
      type: 'upgrade',
      itemName: 'VIP —Å—Ç–∞—Ç—É—Å',
      amount: 50000,
      timestamp: Date.now(),
      date: new Date().toISOString()
    })
    localStorage.setItem(`spentHistory_${currentUser.id}`, JSON.stringify(spentHistory))
    
    const updatedStats = {
      ...currentUser.gameStats,
      coins: currentUser.gameStats.coins - 50000
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º VIP —Å—Ç–∞—Ç—É—Å
    localStorage.setItem(`vipStatus_${currentUser.id}`, 'true')
    onUpdateStats(updatedStats)
  }

  const handleBuyUnlimitedEnergy = () => {
    if (!currentUser || currentUser.gameStats.coins < 950000000) return
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞—Ç—É –≤ –∏—Å—Ç–æ—Ä–∏—é
    const spentHistory = JSON.parse(localStorage.getItem(`spentHistory_${currentUser.id}`) || '[]')
    spentHistory.push({
      id: Date.now(),
      type: 'upgrade',
      itemName: '–ë–µ–∑–ª–∏–º–∏—Ç–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è',
      amount: 950000000,
      timestamp: Date.now(),
      date: new Date().toISOString()
    })
    localStorage.setItem(`spentHistory_${currentUser.id}`, JSON.stringify(spentHistory))
    
    const updatedStats = {
      ...currentUser.gameStats,
      coins: currentUser.gameStats.coins - 950000000,
      maxTaps: 1000,
      tapsLeft: 1000
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏
    localStorage.setItem(`unlimitedEnergy_${currentUser.id}`, 'true')
    onUpdateStats(updatedStats)
  }

  const isVIP = localStorage.getItem(`vipStatus_${currentUser.id}`) === 'true'
  const hasUnlimitedEnergy = localStorage.getItem(`unlimitedEnergy_${currentUser.id}`) === 'true'

  return (
    <div className="space-y-4">
      <h2 className="text-2xl font-bold text-center mb-6">–£–ª—É—á—à–µ–Ω–∏—è —Ä–æ–±–æ—Ç–∞</h2>
      
      <Card>
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-4">
            <div>
              <h3 className="text-lg font-semibold">–ú–æ—â–Ω–æ—Å—Ç—å —Ä–æ–±–æ—Ç–∞</h3>
              <p className="text-sm text-muted-foreground">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {currentUser.gameStats.level}</p>
            </div>
            <Badge variant="outline">{currentUser.gameStats.robotPower} –º–æ–Ω–µ—Ç/—Ç–∞–ø</Badge>
          </div>
          <Button 
            onClick={onUpgradeRobot}
            disabled={currentUser.gameStats.coins < currentUser.gameStats.level * 3000000}
            className="w-full"
          >
            –£–ª—É—á—à–∏—Ç—å –∑–∞ {(currentUser.gameStats.level * 3000000).toLocaleString()} –º–æ–Ω–µ—Ç
          </Button>
        </CardContent>
      </Card>

      <Card>
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-4">
            <div>
              <h3 className="text-lg font-semibold">–≠–Ω–µ—Ä–≥–∏—è</h3>
              <p className="text-sm text-muted-foreground">–ú–∞–∫—Å–∏–º—É–º —Ç–∞–ø–æ–≤: {currentUser.gameStats.maxTaps}</p>
            </div>
            <Badge variant="outline">+20 —Ç–∞–ø–æ–≤</Badge>
          </div>
          <Button 
            onClick={handleUpgradeEnergy}
            disabled={currentUser.gameStats.coins < 100000}
            className="w-full"
          >
            –£–ª—É—á—à–∏—Ç—å –∑–∞ 100,000 –º–æ–Ω–µ—Ç
          </Button>
        </CardContent>
      </Card>

      <Card className={hasUnlimitedEnergy ? "border-purple-500 bg-gradient-to-br from-purple-50 to-pink-50" : ""}>
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-4">
            <div>
              <h3 className="text-lg font-semibold flex items-center gap-2">
                ‚ö° –≠–Ω–µ—Ä–≥–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞
                {hasUnlimitedEnergy && <span className="text-purple-600">‚ú® –ê–∫—Ç–∏–≤–Ω–∞</span>}
              </h3>
              <p className="text-sm text-muted-foreground">
                {hasUnlimitedEnergy ? '1000 —ç–Ω–µ—Ä–≥–∏–∏, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç' : '–ú–∞–∫—Å–∏–º—É–º 1000 —ç–Ω–µ—Ä–≥–∏–∏, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç'}
              </p>
            </div>
            <Badge variant={hasUnlimitedEnergy ? "default" : "outline"} className={hasUnlimitedEnergy ? "bg-purple-500" : ""}>
              {hasUnlimitedEnergy ? "–ö—É–ø–ª–µ–Ω–æ" : "–ù–∞–≤—Å–µ–≥–¥–∞"}
            </Badge>
          </div>
          <Button 
            onClick={handleBuyUnlimitedEnergy}
            disabled={currentUser.gameStats.coins < 950000000 || hasUnlimitedEnergy}
            className={`w-full ${hasUnlimitedEnergy ? 'bg-purple-500 hover:bg-purple-600' : 'bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700'}`}
          >
            {hasUnlimitedEnergy ? '‚úÖ –≠–Ω–µ—Ä–≥–∏—è –∫—É–ø–ª–µ–Ω–∞' : '–ö—É–ø–∏—Ç—å –∑–∞ 950,000,000 –º–æ–Ω–µ—Ç'}
          </Button>
        </CardContent>
      </Card>

      <Card className={isVIP ? "border-yellow-500 bg-gradient-to-br from-yellow-50 to-orange-50" : ""}>
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-4">
            <div>
              <h3 className="text-lg font-semibold flex items-center gap-2">
                üëë VIP —Å—Ç–∞—Ç—É—Å
                {isVIP && <span className="text-yellow-600">‚ú® –ê–∫—Ç–∏–≤–µ–Ω</span>}
              </h3>
              <p className="text-sm text-muted-foreground">
                –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏: {isVIP ? '1 —á–∞—Å' : '5 —á–∞—Å–æ–≤ ‚Üí 1 —á–∞—Å'}
              </p>
            </div>
            <Badge variant={isVIP ? "default" : "outline"} className={isVIP ? "bg-yellow-500" : ""}>
              {isVIP ? "VIP" : "–ü—Ä–µ–º–∏—É–º"}
            </Badge>
          </div>
          <Button 
            onClick={handleBuyVIP}
            disabled={currentUser.gameStats.coins < 50000 || isVIP}
            className={`w-full ${isVIP ? 'bg-yellow-500 hover:bg-yellow-600' : ''}`}
          >
            {isVIP ? '‚úÖ VIP –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω' : '–ö—É–ø–∏—Ç—å VIP –∑–∞ 50,000 –º–æ–Ω–µ—Ç'}
          </Button>
        </CardContent>
      </Card>
    </div>
  )
}